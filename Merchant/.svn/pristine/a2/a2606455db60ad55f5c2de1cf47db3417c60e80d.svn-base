/**!
 * not-delivery.controller
 * 创建非入仓商品控制器
 * @author xiaodong.liu
 * @create 2016-05-07 14:23
 */
(function () {
    'use strict';

    angular
        .module('xcore.biz.product')
        .controller('product.publish.NotDeliveryController', NotDeliveryController)

    NotDeliveryController.$inject = [
        '$timeout',
        '$state',
        '$scope',
        'product.publish.publishNoDeliveryService',
        'settings',
        'notDelivery.urls',
        'comp.notification.notificationService',
        '$q',
        '$http',
        'comp.util.arrayUtil'
    ];

    function NotDeliveryController($timeout, $state, $scope, publishNoDeliveryService, settings, notDeliveryUrls, notificationService, $q, $http, arrayUtil) {
        var vm = this,
            createUrls = notDeliveryUrls.create,
            detailUrls = notDeliveryUrls.detail,
            FIRST_CATAGORY = createUrls.firstCatagory,
            OTHER_CATAGORY = createUrls.otherCatagory;
        vm.rest = {};
        $scope.form = {};
        vm.product = $scope.form.product = {
            info: {},
            productSpecifications: [],
            properties: [],
            parameters: [],
            pics: [],
            detailDesc: ''
        }
        var info={
            "areaType":'',
            "baCode":'',
            "purchaseClass":'',
            "brandCode":'',
            "name":'',
            "summary":''
        };
        vm.product.info=info;
        vm.src ={};
        vm.selected ={};
        vm.src={
            specifications:[],
            properties:[],
            parameters:[]
        };
        vm.selected={
            specifications:{list:[],specIndexList:[],finalSpecMatrixList:[]},
            properties:[],
            parameters:[]
        }
        vm.getFirstCatagory = getFirstCatagory;
        vm.getSecondCatagory = getSecondCatagory;
        vm.getThirdCatagory = getThirdCatagory;
        
        function getFirstCatagory(){
            return publishNoDeliveryService
                .commonGet(FIRST_CATAGORY, null, null)
                .then(function(data){
                    return data = arrayUtil.formatToMulitSelect(data);
                }, function(){
                    notificationService.notify('异常', '一级采购分类查询出错');
                })
        }
        
        function getSecondCatagory(selected){
            var pcCode = selected.firstCatagory;
            return publishNoDeliveryService
                .commonGet(OTHER_CATAGORY, {pcCode: pcCode}, null)
                .then(function(data){
                    return data = arrayUtil.formatToMulitSelect(data);
                }, function(){
                    notificationService.notify('异常', '二级采购分类查询出错');
                })
        }
        
        function getThirdCatagory(selected){
            var pcCode = selected.secondCatagory;
            return publishNoDeliveryService
                .commonGet(OTHER_CATAGORY, {pcCode: pcCode}, null)
                .then(function(data){
                    return data = arrayUtil.formatToMulitSelect(data);
                }, function(){
                    notificationService.notify('异常', '二级采购分类查询出错');
                })
        }

        /***
         * 根据分类加载商品配置内容（规格,属性,参数等)
         * @type {loadProductConfigureFunc}
         */
        vm.loadProductConfigure = function () {
            publishNoDeliveryService.loadProductConfigure(vm);
        }
        vm.loadProductConfigure();

        /***
         * 选择规格
         * @type {selectSpecificationFunc}
         */
        vm.selectSpecification = function () {
            publishNoDeliveryService.selectSpecification();
        }

        vm.isSpecValueSelected = function(matrixIndex, pvId) {
            return publishNoDeliveryService.isSpecValueSelected(matrixIndex, pvId)
        }

        vm.updateSpecMatrix =function updateSpecMatrixFunc($event, matrixIndex, pvId) {
            publishNoDeliveryService.updateSpecMatrix($event, matrixIndex, pvId);
        }
    }

})();
