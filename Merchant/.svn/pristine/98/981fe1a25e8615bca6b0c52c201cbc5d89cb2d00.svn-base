/**!
 * main.controller.js
 * @author jianglj
 * @create 2016-04-18 11:11
 */
(function () {
    'use strict';

    angular
        .module('xcore.biz.product')
        .controller('product.publish.MainController', mainController)

    mainController.$inject = [
        '$controller',
        '$state',
        '$scope',
        '$rootScope',
        '$filter',
        'product.publish.publishService',
        'comp.notification.notificationService',
        '$timeout'
    ];
    function mainController($controller, $state, $scope, $rootScope, $filter, publishService, notificationService, $timeout) {
        var vm = this,
        //查询销售商品的关联采购商品信息
            PURCHASE = '/product/inWarehouse/stock-price/get-purchase/:psCode',
        //查询销售商品的关联采购商品详情信息
            PURCHASE_DETAIL = '/product/inWarehouse/stock-price/get/:psCode',
        //查询销售商品的关联采购商品详情拷贝
            PURCHASE_COPY = '';

        //统一设置库存/价格 true, 分渠道设置价格/库存 false
        vm.isCommonSet = true;
        $rootScope.product = {
            status: {
                //商品价格/库存 创建=1(默认) || 修改=2 || 拷贝=3
                isCreate: 1,
                isDelivery: '',
                isSave: false
            }
        }

        vm.channels = [];
        
        $scope.product = {
            psCode: null,
            status: $rootScope.product.status,
            unified: {
                marketAmount: '',
                sellPrice: '',
                sellNums: '',
                limitNums: '',
            },
            multiple: [],
            channels: [
                {
                    "scCode": "APP",
                    "name": "APP渠道",
                    "memo": "自营渠道",
                    "state": "1",
                    "level": 2,
                    "isLeaf": "1",
                    "pscCode": "ZZT",
                    "createTime": 1459338657000,
                    "updateTime": 1459338659000,
                    "platform": null
                },
                {
                    "scCode": "BS",
                    "name": "爆款渠道",
                    "memo": "爆款渠道",
                    "state": "1",
                    "level": 2,
                    "isLeaf": "1",
                    "pscCode": "ZZT",
                    "createTime": 1461847129000,
                    "updateTime": 1461847129000,
                    "platform": null
                },
                {
                    "scCode": "FX1",
                    "name": "分销渠道1",
                    "memo": "分销渠道",
                    "state": "1",
                    "level": 2,
                    "isLeaf": "1",
                    "pscCode": "FX",
                    "createTime": 1459339055000,
                    "updateTime": 1459339058000,
                    "platform": null
                },
                {
                    "scCode": "H5",
                    "name": "H5渠道",
                    "memo": "自营渠道",
                    "state": "1",
                    "level": 2,
                    "isLeaf": "1",
                    "pscCode": "ZZT",
                    "createTime": 1459338612000,
                    "updateTime": 1459338615000,
                    "platform": null
                },
                {
                    "scCode": "PC",
                    "name": "PC渠道",
                    "memo": "自营渠道",
                    "state": "1",
                    "level": 2,
                    "isLeaf": "1",
                    "pscCode": "ZZT",
                    "createTime": 1459255347000,
                    "updateTime": 1459255349000,
                    "platform": null
                }
            ]
        }
        //更改渠道
        vm._changeChannel = _changeChannel;
        //获取
        vm._getPurchaseDetail = _getPurchaseDetail;
        //判断入仓还是不入仓 来加载对应state
        vm._isDelivery = _isDelivery;
        //点击商品信息tab
        vm._goProduct = _goProduct;
        //点击商品价格/库存/渠道tab
        vm._goPurchase = _goPurchase;

        function _goProduct(){
            if($rootScope.product.status.isCreate === 1){
                $state.go('xcore.product_publish');
            }

        }

        function _goPurchase(){
            var promise,
                success = function (purchase) {
                    $scope.$broadcast('getPurchaseData', purchase);
                },
                failure = function (errMsg) {
                    notificationService.notify('异常', errMsg);
                };
            switch($scope.product.status.isCreate)
            {
                //创建
                case 1:
                    promise = publishService.getPurchase(PURCHASE, {psCode: $scope.product.psCode}, null);
                    promise.then(success, failure);
                    break;
                //编辑
                case 2:
                    promise = publishService.getPurchase(PURCHASE_DETAIL, {psCode: $scope.product.psCode}, null);
                    promise.then(success, failure);
                    break;
                //拷贝
                case 3:
                    promise = publishService.getPurchase(PURCHASE_DETAIL, {psCode: $scope.product.psCode}, null);
                    promise.then(success, failure);
            }
        }

        function _isDelivery(isDelivery, bool) {
            isDelivery = bool;
            if (bool) {
                $state.go('xcore.product_publish.delivery');
            }else{
                $state.go('xcore.product_publish.not_delivery');
            }
        }

        function _changeChannel(form, isChecked, multiple, channel, psCode, index) {
            if (isChecked) {
                multiple[index] = {
                    scCode: channel.scCode,
                    name: channel.name,
                    psCode: psCode
                }
            } else {
                multiple[index] = undefined
            }
        }

        function _getPurchaseDetail() {
            publishService
                .getPurchase(PURCHASE_DETAIL, {psCode: $scope.product.psCode}, null)
                .then(function (purchase) {
                    if (+purchase.sellType === 0) {
                        $scope.product.unified = purchase.productStockPrices[0];
                    } else {
                        $scope.product.multiple = purchase.productStockPrices; 
                    }
                    vm.isCreate = false;
                    vm.purchase = purchase.batchProducts;
                }, function (errMsg) {
                    notificationService.notify('异常', errMsg);
                });
        }

        /*publishService
            .getPurchase(PURCHASE, {psCode: $scope.product.psCode}, null)
            .then(function (data) {
                vm.purchase = data;
            }, function (errMsg) {
                notificationService.notify('异常', errMsg);
            });*/
    }

})();
